#!/bin/sh

PATH=/bin:/sbin:/usr/bin:/usr/sbin
tun=tun21

# Run original firewall
/usr/sbin/net-wall-bin $*

if [ "$1" = "rule" ]; then
	# Store rules of original firewall
	cat /tmp/netwall-rules > /tmp/netwall-rules.tmp

	# Check config file existence, add own rules if file exists
	if [ -f /etc/netwall.conf ]; then
		cat /etc/netwall.conf > /tmp/netwall-rules
	elif [ -f /root/netwall-rules ]; then
		cat /root/netwall-rules > /tmp/netwall-rules
	else
		rm -f /tmp/netwall-rules
	fi

	cat /tmp/netwall-rules.tmp >> /tmp/netwall-rules
	rm -f /tmp/netwall-rules.tmp
else
	[ "$1" = "-6" ] && shift
fi

if [ "$1" = "start" ] || [ "$1" = "restart" ]; then
	# Get WAN interface name
	ifconfig ppp0 >/dev/null 2>&1 && WAN_IF='ppp0' || WAN_IF="$(nvram get wan_ifname)"

	# Check for active VPN tunnel
	if ifconfig | grep -qF "$tun" && kill -0 "$(cat /var/run/openvpn-client.pid 2>/dev/null)" >/dev/null 2>&1; then
		# OpenVPN client
		TUN_IF=$tun
	elif ifconfig | grep -qF 'wg0'; then
		# WireGuard client
		TUN_IF="wg0"
	else
		# No tunnel
		TUN_IF=""
	fi

	if [ "$TUN_IF" != "" ]; then
		# Find position of rule "brwan_in   all  --  brwan" or "ppp0_in   all  --  ppp0"
		pos=$(iptables -L -v -n --line-numbers | grep -E """$WAN_IF""_in[ ]+all[ -]+""$WAN_IF""" | awk '{print $1}')
		iptables -I INPUT "$pos" -i "$TUN_IF" -p 2 -j ACCEPT
		iptables -I INPUT $((pos+2)) -i "$TUN_IF" -j "$WAN_IF"_in

		# Find position of rule "fw2net     all  --  *      brwan " or "fw2net     all  --  *      ppp0"
		pos=$(iptables -L -v -n --line-numbers | grep -E "fw2net[ ]+all[ -]+[* ]+""$WAN_IF""" | awk '{print $1}')
		iptables -I OUTPUT $((pos-3)) -o "$TUN_IF" -p udp -m udp --dport 67:68 -j ACCEPT
		iptables -I OUTPUT $((pos-1)) -o "$TUN_IF" -p 2 -j ACCEPT
		iptables -I OUTPUT $((pos+3)) -o "$TUN_IF" -j fw2net

		iptables -I FORWARD 2 -i "$TUN_IF" -j "$WAN_IF"_fwd
		iptables -I br0_fwd 2 -o "$TUN_IF" -j loc2net
		iptables -t nat -A POSTROUTING -o "$TUN_IF" -j MASQUERADE
	fi

	# If WireGuard client, then set clamp-mss-to-pmtu
	if [ "$TUN_IF" = "wg0" ]; then
		iptables -t mangle -I FORWARD -o wg0 -p tcp -m tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu
		iptables -t mangle -I FORWARD -i wg0 -p tcp -m tcp --tcp-flags SYN,RST SYN -j TCPMSS --clamp-mss-to-pmtu
	fi

	# Run own script with own iptables rules providing backward compatibility
	if [ -x /opt/scripts/firewall-start.sh ]; then
		/opt/scripts/firewall-start.sh
	elif [ -x /root/firewall-start.sh ]; then
		/root/firewall-start.sh
	fi
fi
