#
# For a description of the syntax of this configuration file,
# see scripts/kbuild/config-language.txt.
#

menu "Editors"

config DNIBUSYBOX_CONFIG_AWK
	bool "awk"
	default y
	help
	  Awk is used as a pattern scanning and processing language.  This is
	  the BusyBox implementation of that programming language.

config DNIBUSYBOX_CONFIG_AWX
	bool "Enable awx (awk web extension)"
	default y
	depends on DNIBUSYBOX_CONFIG_AWK
	help
	  awx - awk web extension

config DNIBUSYBOX_CONFIG_FEATURE_AWK_MATH
	bool "Enable math functions (requires libm)"
	default y
	depends on DNIBUSYBOX_CONFIG_AWK
	help
	  Enable math functions of the Awk programming language.
	  NOTE: This will require libm to be present for linking.

config DNIBUSYBOX_CONFIG_ED
	bool "ed"
	default n
	help
	  The original 1970's Unix text editor, from the days of teletypes.
	  Small, simple, evil.  Part of SUSv3.  If you're not already using
	  this, you don't need it.

config DNIBUSYBOX_CONFIG_PATCH
	bool "patch"
	default y
	help
	  Apply a unified diff formatted patch.

config DNIBUSYBOX_CONFIG_SED
	bool "sed"
	default y
	help
	  sed is used to perform text transformations on a file
	  or input from a pipeline.

config DNIBUSYBOX_CONFIG_VI
	bool "vi"
	default y
	help
	  'vi' is a text editor.  More specifically, it is the One True
	  text editor <grin>.  It does, however, have a rather steep
	  learning curve.  If you are not already comfortable with 'vi'
	  you may wish to use something else.

config DNIBUSYBOX_CONFIG_FEATURE_VI_COLON
	bool "Enable \":\" colon commands (no \"ex\" mode)"
	default y
	depends on DNIBUSYBOX_CONFIG_VI
	help
	  Enable a limited set of colon commands for vi.  This does not
	  provide an "ex" mode.

config DNIBUSYBOX_CONFIG_FEATURE_VI_YANKMARK
	bool "Enable yank/put commands and mark cmds"
	default y
	depends on DNIBUSYBOX_CONFIG_VI
	help
	  This will enable you to use yank and put, as well as mark in
	  busybox vi.

config DNIBUSYBOX_CONFIG_FEATURE_VI_SEARCH
	bool "Enable search and replace cmds"
	default y
	depends on DNIBUSYBOX_CONFIG_VI
	help
	  Select this if you wish to be able to do search and replace in
	  busybox vi.

config DNIBUSYBOX_CONFIG_FEATURE_VI_USE_SIGNALS
	bool "Catch signals"
	default y
	depends on DNIBUSYBOX_CONFIG_VI
	help
	  Selecting this option will make busybox vi signal aware.  This will
	  make busybox vi support SIGWINCH to deal with Window Changes, catch
	  Ctrl-Z and Ctrl-C and alarms.

config DNIBUSYBOX_CONFIG_FEATURE_VI_DOT_CMD
	bool "Remember previous cmd and \".\" cmd"
	default y
	depends on DNIBUSYBOX_CONFIG_VI
	help
	  Make busybox vi remember the last command and be able to repeat it.

config DNIBUSYBOX_CONFIG_FEATURE_VI_READONLY
	bool "Enable -R option and \"view\" mode"
	default y
	depends on DNIBUSYBOX_CONFIG_VI
	help
	  Enable the read-only command line option, which allows the user to
	  open a file in read-only mode.

config DNIBUSYBOX_CONFIG_FEATURE_VI_SETOPTS
	bool "Enable set-able options, ai ic showmatch"
	default y
	depends on DNIBUSYBOX_CONFIG_VI
	help
	  Enable the editor to set some (ai, ic, showmatch) options.

config DNIBUSYBOX_CONFIG_FEATURE_VI_SET
	bool "Support for :set"
	default y
	depends on DNIBUSYBOX_CONFIG_VI
	help
	  Support for ":set".

config DNIBUSYBOX_CONFIG_FEATURE_VI_WIN_RESIZE
	bool "Handle window resize"
	default y
	depends on DNIBUSYBOX_CONFIG_VI
	help
	  Make busybox vi behave nicely with terminals that get resized.

config DNIBUSYBOX_CONFIG_FEATURE_VI_OPTIMIZE_CURSOR
	bool "Optimize cursor movement"
	default y
	depends on DNIBUSYBOX_CONFIG_VI
	help
	  This will make the cursor movement faster, but requires more memory
	  and it makes the applet a tiny bit larger.

config DNIBUSYBOX_CONFIG_FEATURE_ALLOW_EXEC
	bool "Allow vi and awk to execute shell commands"
	default y
	depends on DNIBUSYBOX_CONFIG_VI || DNIBUSYBOX_CONFIG_AWK
	help
	  Enables vi and awk features which allows user to execute
	  shell commands (using system() C call).

endmenu
