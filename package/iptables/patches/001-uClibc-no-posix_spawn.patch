--- a/libxtables/xtables.c	2020-10-31 20:27:07.000000000 +0300
+++ b/libxtables/xtables.c	2020-11-17 12:11:56.244966828 +0300
@@ -21,7 +21,6 @@
 #include <fcntl.h>
 #include <inttypes.h>
 #include <netdb.h>
-#include <spawn.h>
 #include <stdarg.h>
 #include <stdbool.h>
 #include <stdio.h>
@@ -406,7 +405,6 @@
 	char *buf = NULL;
 	char *argv[4];
 	int status;
-	pid_t pid;
 
 	/* If they don't explicitly set it, read out of kernel */
 	if (!modprobe) {
@@ -416,22 +414,33 @@
 		modprobe = buf;
 	}
 
-	argv[0] = (char *)modprobe;
-	argv[1] = (char *)modname;
-	argv[2] = quiet ? "-q" : NULL;
-	argv[3] = NULL;
-
 	/*
 	 * Need to flush the buffer, or the child may output it again
 	 * when switching the program thru execv.
 	 */
 	fflush(stdout);
 
-	if (posix_spawn(&pid, argv[0], NULL, NULL, argv, NULL)) {
+	switch (vfork()) {
+	case 0:
+		argv[0] = (char *)modprobe;
+		argv[1] = (char *)modname;
+		if (quiet) {
+			argv[2] = "-q";
+			argv[3] = NULL;
+		} else {
+			argv[2] = NULL;
+			argv[3] = NULL;
+		}
+		execv(argv[0], argv);
+
+		/* not usually reached */
+		exit(1);
+	case -1:
 		free(buf);
 		return -1;
-	} else {
-		waitpid(pid, &status, 0);
+
+	default: /* parent */
+		wait(&status);
 	}
 
 	free(buf);
