--- a/configure
+++ b/configure
@@ -16508,62 +16508,6 @@
 
 fi
 
-	{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for library containing __atomic_fetch_add_4" >&5
-$as_echo_n "checking for library containing __atomic_fetch_add_4... " >&6; }
-if ${ac_cv_search___atomic_fetch_add_4+:} false; then :
-  $as_echo_n "(cached) " >&6
-else
-  ac_func_search_save_LIBS=$LIBS
-cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-
-/* Override any GCC internal prototype to avoid an error.
-   Use char because int might match the return type of a GCC
-   builtin and then its argument prototype would still apply.  */
-#ifdef __cplusplus
-extern "C"
-#endif
-char __atomic_fetch_add_4 ();
-int
-main ()
-{
-return __atomic_fetch_add_4 ();
-  ;
-  return 0;
-}
-_ACEOF
-for ac_lib in '' atomic; do
-  if test -z "$ac_lib"; then
-    ac_res="none required"
-  else
-    ac_res=-l$ac_lib
-    LIBS="-l$ac_lib  $ac_func_search_save_LIBS"
-  fi
-  if ac_fn_c_try_link "$LINENO"; then :
-  ac_cv_search___atomic_fetch_add_4=$ac_res
-fi
-rm -f core conftest.err conftest.$ac_objext \
-    conftest$ac_exeext
-  if ${ac_cv_search___atomic_fetch_add_4+:} false; then :
-  break
-fi
-done
-if ${ac_cv_search___atomic_fetch_add_4+:} false; then :
-
-else
-  ac_cv_search___atomic_fetch_add_4=no
-fi
-rm conftest.$ac_ext
-LIBS=$ac_func_search_save_LIBS
-fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_search___atomic_fetch_add_4" >&5
-$as_echo "$ac_cv_search___atomic_fetch_add_4" >&6; }
-ac_res=$ac_cv_search___atomic_fetch_add_4
-if test "$ac_res" != no; then :
-  test "$ac_res" = "none required" || LIBS="$ac_res $LIBS"
-
-fi
-
 elif test "x$platform" = xwindows; then
 
 $as_echo "#define PLATFORM_WINDOWS 1" >>confdefs.h
--- a/configure.ac
+++ b/configure.ac
@@ -153,7 +153,6 @@
 	AC_SEARCH_LIBS([pthread_create], [pthread],
 		[test "x$ac_cv_search_pthread_create" != "xnone required" && AC_SUBST(THREAD_LIBS, [-lpthread])],
 		[], [])
-	AC_SEARCH_LIBS([__atomic_fetch_add_4], [atomic])
 elif test "x$platform" = xwindows; then
 	AC_DEFINE([PLATFORM_WINDOWS], [1], [Define to 1 if compiling for a Windows platform.])
 else
